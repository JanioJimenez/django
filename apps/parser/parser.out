Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> IDENTIFICADOR IGUAL expression
Rule 2     statement -> expression
Rule 3     expression -> expression RESTA expression
Rule 4     expression -> expression SUMA expression
Rule 5     expression -> expression MULTIPLICACION expression
Rule 6     expression -> expression DIVICION expression
Rule 7     expression -> RESTA expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> NUMERO
Rule 10    expression -> json
Rule 11    expression -> IDENTIFICADOR
Rule 12    json -> LLLAVE sentencia RLLAVE
Rule 13    sentencia -> arreglo COMA sentencia
Rule 14    sentencia -> arreglo
Rule 15    sentencia -> objeto COMA sentencia
Rule 16    sentencia -> objeto
Rule 17    arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH
Rule 18    arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH
Rule 19    vector -> objeto COMA vector
Rule 20    vector -> objeto
Rule 21    matriz -> json COMA matriz
Rule 22    matriz -> json
Rule 23    objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
Rule 24    objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA

Terminals, with rules where they appear

COMA                 : 13 15 19 21
COMILLA              : 17 17 18 18 23 23 23 23 24 24 24 24
DIVICION             : 6
DOSPUN               : 17 18 23 24
IDENTIFICADOR        : 1 11
IGUAL                : 1
LCORCH               : 17 18
LLLAVE               : 12
LPAREN               : 8
MULTIPLICACION       : 5
NUMERO               : 9 23
RCORCH               : 17 18
RESTA                : 3 7
RLLAVE               : 12
RPAREN               : 8
STRING               : 17 18 23 24 24
SUMA                 : 4
error                : 

Nonterminals, with rules where they appear

arreglo              : 13 14
expression           : 1 2 3 3 4 4 5 5 6 6 7 8
json                 : 10 21 22
matriz               : 18 21
objeto               : 15 16 19 20
sentencia            : 12 13 15
statement            : 0
vector               : 17 19

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . IDENTIFICADOR IGUAL expression
    (2) statement -> . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    IDENTIFICADOR   shift and go to state 2
    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    LLLAVE          shift and go to state 8

    statement                      shift and go to state 1
    expression                     shift and go to state 3
    json                           shift and go to state 7

state 1

    (0) S' -> statement .



state 2

    (1) statement -> IDENTIFICADOR . IGUAL expression
    (11) expression -> IDENTIFICADOR .

    IGUAL           shift and go to state 9
    RESTA           reduce using rule 11 (expression -> IDENTIFICADOR .)
    SUMA            reduce using rule 11 (expression -> IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 11 (expression -> IDENTIFICADOR .)
    DIVICION        reduce using rule 11 (expression -> IDENTIFICADOR .)
    $end            reduce using rule 11 (expression -> IDENTIFICADOR .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    $end            reduce using rule 2 (statement -> expression .)
    RESTA           shift and go to state 10
    SUMA            shift and go to state 11
    MULTIPLICACION  shift and go to state 12
    DIVICION        shift and go to state 13


state 4

    (7) expression -> RESTA . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 14
    json                           shift and go to state 7

state 5

    (8) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 16
    json                           shift and go to state 7

state 6

    (9) expression -> NUMERO .

    RESTA           reduce using rule 9 (expression -> NUMERO .)
    SUMA            reduce using rule 9 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 9 (expression -> NUMERO .)
    DIVICION        reduce using rule 9 (expression -> NUMERO .)
    $end            reduce using rule 9 (expression -> NUMERO .)
    RPAREN          reduce using rule 9 (expression -> NUMERO .)


state 7

    (10) expression -> json .

    RESTA           reduce using rule 10 (expression -> json .)
    SUMA            reduce using rule 10 (expression -> json .)
    MULTIPLICACION  reduce using rule 10 (expression -> json .)
    DIVICION        reduce using rule 10 (expression -> json .)
    $end            reduce using rule 10 (expression -> json .)
    RPAREN          reduce using rule 10 (expression -> json .)


state 8

    (12) json -> LLLAVE . sentencia RLLAVE
    (13) sentencia -> . arreglo COMA sentencia
    (14) sentencia -> . arreglo
    (15) sentencia -> . objeto COMA sentencia
    (16) sentencia -> . objeto
    (17) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH
    (18) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH
    (23) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 20

    sentencia                      shift and go to state 17
    arreglo                        shift and go to state 18
    objeto                         shift and go to state 19

state 9

    (1) statement -> IDENTIFICADOR IGUAL . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 21
    json                           shift and go to state 7

state 10

    (3) expression -> expression RESTA . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 22
    json                           shift and go to state 7

state 11

    (4) expression -> expression SUMA . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 23
    json                           shift and go to state 7

state 12

    (5) expression -> expression MULTIPLICACION . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 24
    json                           shift and go to state 7

state 13

    (6) expression -> expression DIVICION . expression
    (3) expression -> . expression RESTA expression
    (4) expression -> . expression SUMA expression
    (5) expression -> . expression MULTIPLICACION expression
    (6) expression -> . expression DIVICION expression
    (7) expression -> . RESTA expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMERO
    (10) expression -> . json
    (11) expression -> . IDENTIFICADOR
    (12) json -> . LLLAVE sentencia RLLAVE

    RESTA           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMERO          shift and go to state 6
    IDENTIFICADOR   shift and go to state 15
    LLLAVE          shift and go to state 8

    expression                     shift and go to state 25
    json                           shift and go to state 7

state 14

    (7) expression -> RESTA expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RESTA           reduce using rule 7 (expression -> RESTA expression .)
    SUMA            reduce using rule 7 (expression -> RESTA expression .)
    MULTIPLICACION  reduce using rule 7 (expression -> RESTA expression .)
    DIVICION        reduce using rule 7 (expression -> RESTA expression .)
    $end            reduce using rule 7 (expression -> RESTA expression .)
    RPAREN          reduce using rule 7 (expression -> RESTA expression .)

  ! RESTA           [ shift and go to state 10 ]
  ! SUMA            [ shift and go to state 11 ]
  ! MULTIPLICACION  [ shift and go to state 12 ]
  ! DIVICION        [ shift and go to state 13 ]


state 15

    (11) expression -> IDENTIFICADOR .

    RESTA           reduce using rule 11 (expression -> IDENTIFICADOR .)
    SUMA            reduce using rule 11 (expression -> IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 11 (expression -> IDENTIFICADOR .)
    DIVICION        reduce using rule 11 (expression -> IDENTIFICADOR .)
    $end            reduce using rule 11 (expression -> IDENTIFICADOR .)
    RPAREN          reduce using rule 11 (expression -> IDENTIFICADOR .)


state 16

    (8) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RPAREN          shift and go to state 26
    RESTA           shift and go to state 10
    SUMA            shift and go to state 11
    MULTIPLICACION  shift and go to state 12
    DIVICION        shift and go to state 13


state 17

    (12) json -> LLLAVE sentencia . RLLAVE

    RLLAVE          shift and go to state 27


state 18

    (13) sentencia -> arreglo . COMA sentencia
    (14) sentencia -> arreglo .

    COMA            shift and go to state 28
    RLLAVE          reduce using rule 14 (sentencia -> arreglo .)


state 19

    (15) sentencia -> objeto . COMA sentencia
    (16) sentencia -> objeto .

    COMA            shift and go to state 29
    RLLAVE          reduce using rule 16 (sentencia -> objeto .)


state 20

    (17) arreglo -> COMILLA . STRING COMILLA DOSPUN LCORCH vector RCORCH
    (18) arreglo -> COMILLA . STRING COMILLA DOSPUN LCORCH matriz RCORCH
    (23) objeto -> COMILLA . STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA . STRING COMILLA DOSPUN COMILLA STRING COMILLA

    STRING          shift and go to state 30


state 21

    (1) statement -> IDENTIFICADOR IGUAL expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    $end            reduce using rule 1 (statement -> IDENTIFICADOR IGUAL expression .)
    RESTA           shift and go to state 10
    SUMA            shift and go to state 11
    MULTIPLICACION  shift and go to state 12
    DIVICION        shift and go to state 13


state 22

    (3) expression -> expression RESTA expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RESTA           reduce using rule 3 (expression -> expression RESTA expression .)
    SUMA            reduce using rule 3 (expression -> expression RESTA expression .)
    $end            reduce using rule 3 (expression -> expression RESTA expression .)
    RPAREN          reduce using rule 3 (expression -> expression RESTA expression .)
    MULTIPLICACION  shift and go to state 12
    DIVICION        shift and go to state 13

  ! MULTIPLICACION  [ reduce using rule 3 (expression -> expression RESTA expression .) ]
  ! DIVICION        [ reduce using rule 3 (expression -> expression RESTA expression .) ]
  ! RESTA           [ shift and go to state 10 ]
  ! SUMA            [ shift and go to state 11 ]


state 23

    (4) expression -> expression SUMA expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RESTA           reduce using rule 4 (expression -> expression SUMA expression .)
    SUMA            reduce using rule 4 (expression -> expression SUMA expression .)
    $end            reduce using rule 4 (expression -> expression SUMA expression .)
    RPAREN          reduce using rule 4 (expression -> expression SUMA expression .)
    MULTIPLICACION  shift and go to state 12
    DIVICION        shift and go to state 13

  ! MULTIPLICACION  [ reduce using rule 4 (expression -> expression SUMA expression .) ]
  ! DIVICION        [ reduce using rule 4 (expression -> expression SUMA expression .) ]
  ! RESTA           [ shift and go to state 10 ]
  ! SUMA            [ shift and go to state 11 ]


state 24

    (5) expression -> expression MULTIPLICACION expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RESTA           reduce using rule 5 (expression -> expression MULTIPLICACION expression .)
    SUMA            reduce using rule 5 (expression -> expression MULTIPLICACION expression .)
    MULTIPLICACION  reduce using rule 5 (expression -> expression MULTIPLICACION expression .)
    DIVICION        reduce using rule 5 (expression -> expression MULTIPLICACION expression .)
    $end            reduce using rule 5 (expression -> expression MULTIPLICACION expression .)
    RPAREN          reduce using rule 5 (expression -> expression MULTIPLICACION expression .)

  ! RESTA           [ shift and go to state 10 ]
  ! SUMA            [ shift and go to state 11 ]
  ! MULTIPLICACION  [ shift and go to state 12 ]
  ! DIVICION        [ shift and go to state 13 ]


state 25

    (6) expression -> expression DIVICION expression .
    (3) expression -> expression . RESTA expression
    (4) expression -> expression . SUMA expression
    (5) expression -> expression . MULTIPLICACION expression
    (6) expression -> expression . DIVICION expression

    RESTA           reduce using rule 6 (expression -> expression DIVICION expression .)
    SUMA            reduce using rule 6 (expression -> expression DIVICION expression .)
    MULTIPLICACION  reduce using rule 6 (expression -> expression DIVICION expression .)
    DIVICION        reduce using rule 6 (expression -> expression DIVICION expression .)
    $end            reduce using rule 6 (expression -> expression DIVICION expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVICION expression .)

  ! RESTA           [ shift and go to state 10 ]
  ! SUMA            [ shift and go to state 11 ]
  ! MULTIPLICACION  [ shift and go to state 12 ]
  ! DIVICION        [ shift and go to state 13 ]


state 26

    (8) expression -> LPAREN expression RPAREN .

    RESTA           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    SUMA            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MULTIPLICACION  reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVICION        reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 27

    (12) json -> LLLAVE sentencia RLLAVE .

    RESTA           reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    SUMA            reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    MULTIPLICACION  reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    DIVICION        reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    $end            reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    RPAREN          reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    COMA            reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)
    RCORCH          reduce using rule 12 (json -> LLLAVE sentencia RLLAVE .)


state 28

    (13) sentencia -> arreglo COMA . sentencia
    (13) sentencia -> . arreglo COMA sentencia
    (14) sentencia -> . arreglo
    (15) sentencia -> . objeto COMA sentencia
    (16) sentencia -> . objeto
    (17) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH
    (18) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH
    (23) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 20

    arreglo                        shift and go to state 18
    sentencia                      shift and go to state 31
    objeto                         shift and go to state 19

state 29

    (15) sentencia -> objeto COMA . sentencia
    (13) sentencia -> . arreglo COMA sentencia
    (14) sentencia -> . arreglo
    (15) sentencia -> . objeto COMA sentencia
    (16) sentencia -> . objeto
    (17) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH
    (18) arreglo -> . COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH
    (23) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 20

    objeto                         shift and go to state 19
    sentencia                      shift and go to state 32
    arreglo                        shift and go to state 18

state 30

    (17) arreglo -> COMILLA STRING . COMILLA DOSPUN LCORCH vector RCORCH
    (18) arreglo -> COMILLA STRING . COMILLA DOSPUN LCORCH matriz RCORCH
    (23) objeto -> COMILLA STRING . COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING . COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 33


state 31

    (13) sentencia -> arreglo COMA sentencia .

    RLLAVE          reduce using rule 13 (sentencia -> arreglo COMA sentencia .)


state 32

    (15) sentencia -> objeto COMA sentencia .

    RLLAVE          reduce using rule 15 (sentencia -> objeto COMA sentencia .)


state 33

    (17) arreglo -> COMILLA STRING COMILLA . DOSPUN LCORCH vector RCORCH
    (18) arreglo -> COMILLA STRING COMILLA . DOSPUN LCORCH matriz RCORCH
    (23) objeto -> COMILLA STRING COMILLA . DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING COMILLA . DOSPUN COMILLA STRING COMILLA

    DOSPUN          shift and go to state 34


state 34

    (17) arreglo -> COMILLA STRING COMILLA DOSPUN . LCORCH vector RCORCH
    (18) arreglo -> COMILLA STRING COMILLA DOSPUN . LCORCH matriz RCORCH
    (23) objeto -> COMILLA STRING COMILLA DOSPUN . COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING COMILLA DOSPUN . COMILLA STRING COMILLA

    LCORCH          shift and go to state 36
    COMILLA         shift and go to state 35


state 35

    (23) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA . NUMERO COMILLA
    (24) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA . STRING COMILLA

    NUMERO          shift and go to state 38
    STRING          shift and go to state 37


state 36

    (17) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH . vector RCORCH
    (18) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH . matriz RCORCH
    (19) vector -> . objeto COMA vector
    (20) vector -> . objeto
    (21) matriz -> . json COMA matriz
    (22) matriz -> . json
    (23) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA
    (12) json -> . LLLAVE sentencia RLLAVE

    COMILLA         shift and go to state 39
    LLLAVE          shift and go to state 8

    vector                         shift and go to state 40
    matriz                         shift and go to state 41
    objeto                         shift and go to state 42
    json                           shift and go to state 43

state 37

    (24) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING . COMILLA

    COMILLA         shift and go to state 44


state 38

    (23) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO . COMILLA

    COMILLA         shift and go to state 45


state 39

    (23) objeto -> COMILLA . STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA . STRING COMILLA DOSPUN COMILLA STRING COMILLA

    STRING          shift and go to state 46


state 40

    (17) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH vector . RCORCH

    RCORCH          shift and go to state 47


state 41

    (18) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH matriz . RCORCH

    RCORCH          shift and go to state 48


state 42

    (19) vector -> objeto . COMA vector
    (20) vector -> objeto .

    COMA            shift and go to state 49
    RCORCH          reduce using rule 20 (vector -> objeto .)


state 43

    (21) matriz -> json . COMA matriz
    (22) matriz -> json .

    COMA            shift and go to state 50
    RCORCH          reduce using rule 22 (matriz -> json .)


state 44

    (24) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA .

    COMA            reduce using rule 24 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA .)
    RLLAVE          reduce using rule 24 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA .)
    RCORCH          reduce using rule 24 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA .)


state 45

    (23) objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA .

    COMA            reduce using rule 23 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA .)
    RLLAVE          reduce using rule 23 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA .)
    RCORCH          reduce using rule 23 (objeto -> COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA .)


state 46

    (23) objeto -> COMILLA STRING . COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING . COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 51


state 47

    (17) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH .

    COMA            reduce using rule 17 (arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH .)
    RLLAVE          reduce using rule 17 (arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH vector RCORCH .)


state 48

    (18) arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH .

    COMA            reduce using rule 18 (arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH .)
    RLLAVE          reduce using rule 18 (arreglo -> COMILLA STRING COMILLA DOSPUN LCORCH matriz RCORCH .)


state 49

    (19) vector -> objeto COMA . vector
    (19) vector -> . objeto COMA vector
    (20) vector -> . objeto
    (23) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> . COMILLA STRING COMILLA DOSPUN COMILLA STRING COMILLA

    COMILLA         shift and go to state 39

    objeto                         shift and go to state 42
    vector                         shift and go to state 52

state 50

    (21) matriz -> json COMA . matriz
    (21) matriz -> . json COMA matriz
    (22) matriz -> . json
    (12) json -> . LLLAVE sentencia RLLAVE

    LLLAVE          shift and go to state 8

    json                           shift and go to state 43
    matriz                         shift and go to state 53

state 51

    (23) objeto -> COMILLA STRING COMILLA . DOSPUN COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING COMILLA . DOSPUN COMILLA STRING COMILLA

    DOSPUN          shift and go to state 54


state 52

    (19) vector -> objeto COMA vector .

    RCORCH          reduce using rule 19 (vector -> objeto COMA vector .)


state 53

    (21) matriz -> json COMA matriz .

    RCORCH          reduce using rule 21 (matriz -> json COMA matriz .)


state 54

    (23) objeto -> COMILLA STRING COMILLA DOSPUN . COMILLA NUMERO COMILLA
    (24) objeto -> COMILLA STRING COMILLA DOSPUN . COMILLA STRING COMILLA

    COMILLA         shift and go to state 35

